<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>css选择器笔记</title>
      <link href="/2023/11/28/css-xuan-ze-qi-bi-ji/"/>
      <url>/2023/11/28/css-xuan-ze-qi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="css选择器语法"><a href="#css选择器语法" class="headerlink" title="css选择器语法"></a>css选择器语法</h1><h2 id="1-简单选择器"><a href="#1-简单选择器" class="headerlink" title="1.简单选择器"></a>1.简单选择器</h2><h3 id="1-1通配选择器"><a href="#1-1通配选择器" class="headerlink" title="1.1通配选择器"></a>1.1通配选择器</h3><p>可以选中所有的 HTML 元素，一般用于清除样式</p><pre class="line-numbers language-none"><code class="language-none">*{}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-2元素选择器"><a href="#1-2元素选择器" class="headerlink" title="1.2元素选择器"></a>1.2元素选择器</h3><pre class="line-numbers language-none"><code class="language-none">p{}h1{  color:blue}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3-类选择器"><a href="#1-3-类选择器" class="headerlink" title="1.3 类选择器"></a>1.3 类选择器</h3><pre class="line-numbers language-none"><code class="language-none">类名{}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>class 值，按照标准：<br>不要使用纯数字，不要使用中文，尽量使用英文与数字的组合<br>若由多个单词组成，使用 - 做连接，例如:left-menu ，且命名要有意义，做到见名知意。<br>一个元素不能写多个 class 属性，而是 class 属性能写多个值，要用空格隔开</p><h3 id="1-4-id选择器"><a href="#1-4-id选择器" class="headerlink" title="1.4 id选择器"></a>1.4 id选择器</h3><pre class="line-numbers language-none"><code class="language-none">#id{    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>id 属性值：尽量由字母、数字、下划线( _ )、短杠( - )组成，最好以字母开头，不要包含空格，区分大小写<br>一个元素只能拥有一个 id 属性，多个元素的 id 属性值不能相同一个元素可以同时拥有 id 和 class 属性</p><h2 id="2复合选择器"><a href="#2复合选择器" class="headerlink" title="2复合选择器"></a>2复合选择器</h2>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown笔记</title>
      <link href="/2023/10/20/md-bi-ji/"/>
      <url>/2023/10/20/md-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h1><h2 id="1-基本语法"><a href="#1-基本语法" class="headerlink" title="1.基本语法"></a>1.基本语法</h2><h3 id="1-1字体设置斜体、粗体、删除线"><a href="#1-1字体设置斜体、粗体、删除线" class="headerlink" title="1.1字体设置斜体、粗体、删除线"></a>1.1字体设置斜体、粗体、删除线</h3><p>使用 (*或者_ )和( **或者__) 分别表示斜体和粗体，删除线使用两个 ~ 表示</p><table><thead><tr><th>输入内容</th><th>显示效果</th></tr></thead><tbody><tr><td>正常文字</td><td>正常文字</td></tr><tr><td>*我是斜体*</td><td><em>我是斜体</em></td></tr><tr><td>_我是斜体_</td><td><em>我是斜体</em></td></tr><tr><td>**我是加粗**</td><td><strong>我是加粗</strong></td></tr><tr><td>***我是倾斜加粗***</td><td><em><strong>我是倾斜加粗</strong></em></td></tr><tr><td>~~我是删除~~</td><td><del>我是删除</del></td></tr></tbody></table><h3 id="1-2标题分级"><a href="#1-2标题分级" class="headerlink" title="1.2标题分级"></a>1.2标题分级</h3><p>第一种写法：在当前行之前输入 “#”+”空格”可以使当前行被识别为标题<br># 表示一级 ##表示二级 以此类推<br>第二种写法：在当前行的下一行输入一个或者多个”=“和”-“可以使当前行被识别为标题</p><h3 id="1-3分割线"><a href="#1-3分割线" class="headerlink" title="1.3分割线"></a>1.3分割线</h3><p>你可以在一行中用三个以上的星号(<em>)、减号(-)、底线(_)来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。*<em>注意不要被识别为二级标题即可，意思是上面需要是空行</em></em></p><h3 id="1-4链接"><a href="#1-4链接" class="headerlink" title="1.4链接"></a>1.4链接</h3><p>图片与链接相似，图片就是链接前面加叹号！<br><strong>内联式插入图片</strong><br>![图片文字](图片地址+空格+”文字说明”)<br><strong>引用式</strong><br>在任意地方使用[图片引用标记]:图片地址+空格+”文字说明” 来定义引用的图片链接地址,然后使用![图片文字][图片引用标记]放在需要插入图片链接的地方。<br>除此之外，引用式链接还可以省略链接标识符，即省略第二个方括号中的内容，这种链接叫作隐式链接（implicit link），其写作方式如下所示：<br><code>[Google][] [Google]: https://www.google.com</code><br><strong>自动连接</strong><br>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来，Markdown 就会自动把它转成链接。也可以直接写，也是可以显示成链接形式的例如<br><code>&lt;http://baidu.com&gt; http://baidu.com</code></p><h3 id="1-5代码块"><a href="#1-5代码块" class="headerlink" title="1.5代码块"></a>1.5代码块</h3><p>对于程序员来说这个功能是必不可少的，插入程序代码的方式有两种，一种是利用缩进(tab), 另一种是利用英文“`”符号（一般在ESC键下方，和~同一个键）包裹代码，最好用反引号表示代码。<br>（1）代码块：两个tab或者4 个空格或是 1 个制表符。效果如下：   </p><pre><code>#incldue&lt;stdio.h&gt;int main(void)  {printf("hello")}</code></pre><p>（2）行内式如果在一个行内需要引用代码，只要用反引号`引起来就好（一般在ESC键下方，和~同一个键）<br>（3）多行代码块与语法高亮：在需要高亮的代码块的前一行及后一行使用三个单反引号“`”包裹，就可以了。<br>（4）代码块里面包含html代码<br>在代码区块里面， &amp; 、 &lt; 和 &gt; 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，剩下的 Markdown 都会帮你处理。</p><h3 id="1-6引用"><a href="#1-6引用" class="headerlink" title="1.6引用"></a>1.6引用</h3><p>在被引用的文本前加上&gt;符号，以及一个空格就可以了，如果只输入了一个&gt;符号会产生一个空白的引用。引用如果是连续的，中间没有空的，可以只写一个大于号直到不连续。多加几个&gt;表示嵌套。引用其它要素：引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等。</p><h3 id="1-7列表"><a href="#1-7列表" class="headerlink" title="1.7列表"></a>1.7列表</h3><p>（1）无序列表<br>使用 *，+，- 表示无序列表。<br>注意：符号后面一定要有一个空格，起到缩进的作用。<br>（2）有序列表<br>使用数字和一个英文句点表示有序列表。<br>注意：英文句点后面一定要有一个空格，起到缩进的作用。<br>列表不光可以单独使用，也可以使用其他的 Markdown 语法，包括标题、引用、代码区块等。有序和无序列表也可以混合使用<br><strong>注意事项：</strong><br>（1）加粗效果不能直接用于列表标题里面，但是可以嵌套在列表里面混合使用。<br>（2）列表中包含代码块（前面加2个tab或者8个空格，并且需要空一行，否则不显示）。<br>（3）在使用列表时，只要是数字后面加上英文的点，就会无意间产生列表，比如2017.12.30 这时候想表达的是日期，有些软件把它被误认为是列表。解决方式：在每个点前面加上\就可以了。</p><h3 id="1-8表格"><a href="#1-8表格" class="headerlink" title="1.8表格"></a>1.8表格</h3><p>第一个部分是表格的标题，使用|来作为列的分割<br>第二个部分是表示列的对齐方式，有左对齐、居中对齐和居右对齐三种类型，直接看例子吧， — 表示了默认的左对齐， :— 表示 左对齐 ， —: 表示 右对齐 ， :—: 表示居中对齐<br>第三个部分就是内容了，表示方式跟标题一样，可以有多行</p><h2 id="2-常用技巧"><a href="#2-常用技巧" class="headerlink" title="2.常用技巧"></a>2.常用技巧</h2><h3 id="2-1换行"><a href="#2-1换行" class="headerlink" title="2.1换行"></a>2.1换行</h3><p>方法1: 连续两个以上空格+回车<br>方法2：使用html语言换行标签：</p><h3 id="2-2缩进"><a href="#2-2缩进" class="headerlink" title="2.2缩进"></a>2.2缩进</h3><p>不断行的空白格或半角的空格或全角的空格<br><img src="/../images/10.20.png"></p><h3 id="2-3特殊符号"><a href="#2-3特殊符号" class="headerlink" title="2.3特殊符号"></a>2.3特殊符号</h3><p>对于 Markdown 中的语法符号，前面加反斜线\即可显示符号本身。想知道字符对应的Unicode码，可以看这个网站：<a href="https://unicode-table.com/cn/">https://unicode-table.com/cn/</a></p><h3 id="2-4字体、字号和颜色"><a href="#2-4字体、字号和颜色" class="headerlink" title="2.4字体、字号和颜色"></a>2.4字体、字号和颜色</h3><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过类似HTML的标记语法，它可以使普通文本内容具有一定的格式。但是它本身是不支持修改字体、字号与颜色等功能的！但可以使用内联html方法<br><img src="/../images/10.20.font.png"></p><h3 id="2-5链接的高级操作"><a href="#2-5链接的高级操作" class="headerlink" title="2.5链接的高级操作"></a>2.5链接的高级操作</h3><p>1.内联和引用式在上面已经讲过了<br>2.内容目录<br>在段落中填写 [TOC] 以显示全文内容的目录结构。<br>3.锚点<br>锚点其实就是页内超链接。比如我这里写下一个锚点，点击回到目录，就能跳转到目录。 在目录中点击这一节，就能跳过来。在你准备跳转到的指定标题后插入锚点{ # 锚点},然后在文档的其它地方写上连接到锚点的链接<br><img src="/../images/maodian.png"><br>4.脚注<br>在需要添加注脚的文字后加上脚注名字,称为加注。然后在文本的任意位置(一般在最后)添加脚注，脚注前必须有对应的脚注名字。<br>hexo的markdown没有脚注需要另外处理<br>实例如下<br><img src="/../images/10.20.jiao.png"></p><h3 id="2-6背景色"><a href="#2-6背景色" class="headerlink" title="2.6背景色"></a>2.6背景色</h3><p>Markdown本身不支持背景色设置，需要采用内置html的方式实现：借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色的功能。举例如下：</p><p><code>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=orange&gt;背景色是：orange&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</code></p><table><tbody><tr><td bgcolor="orange">背景色是：orange</td></tr></tbody></table><h3 id="2-7emoji表情符号"><a href="#2-7emoji表情符号" class="headerlink" title="2.7emoji表情符号"></a>2.7emoji表情符号</h3><p>emoji表情使用:EMOJICODE:的格式，详细列表可见<br><a href="https://www.webpagefx.com/tools/emoji-cheat-sheet/">https://www.webpagefx.com/tools/emoji-cheat-sheet/</a><br><span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h2 id="3-高端用法"><a href="#3-高端用法" class="headerlink" title="3.高端用法"></a>3.高端用法</h2><p>等用到了再抄本文章主要借鉴于<a href="https://blog.csdn.net/u014061630/article/details/81359144">https://blog.csdn.net/u014061630/article/details/81359144</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学习笔记(__ob_ Observer echarts)</title>
      <link href="/2023/09/28/vue-wen-ti-bi-ji-9.28/"/>
      <url>/2023/09/28/vue-wen-ti-bi-ji-9.28/</url>
      
        <content type="html"><![CDATA[<h1 id="关于Vue使用渲染echarts图出现数据ob-Observer"><a href="#关于Vue使用渲染echarts图出现数据ob-Observer" class="headerlink" title="关于Vue使用渲染echarts图出现数据ob: Observer"></a>关于Vue使用渲染echarts图出现数据ob: Observer</h1><p>一开始将数据处理完成后我将数据初始化函数放到了created里，将图表渲染函数放到了mounted，因为我上网查到created是比mounted先开始的，但发现数据无法到图表里。consolo一下发现ob: Observer，一开始以为是这个原因弄了半天，然后在网上查echarts ob：observer，发现有相同情况的人，最终结案：虽然created是比mounted快，但因为异步的原因，请求数据比较慢，图表在渲染的时候后台还没有请求到数据，所以就是空白的，统计图的渲染要放在而是在后台数据请求完成之后再渲染。<br>如图<br><img src="/../images/9.28.png" alt="图片"><br><strong>所以查百度的时候一定要把握问题的关键，不要少东西少一点条件就抓不住了</strong></p>]]></content>
      
      
      <categories>
          
          <category> vue学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> echarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/09/25/hello-world/"/>
      <url>/2023/09/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
